datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Store{
  id                String     @id @default(uuid())
  createdAt         DateTime @default(now()) @db.Timestamp(0)
  updatedAt         DateTime @updatedAt
  name              String
}

model User {
  ///////////// juliett /////////////
  id                String     @id @default(uuid())
  createdAt         DateTime @default(now()) @db.Timestamp(0)
  updatedAt         DateTime @updatedAt
  email             String  @unique
  username          String
  password          String
  role              String

  ////////////// old /////////////
  // id           Int              @id @default(autoincrement())
  // name         String
  // email        String           @unique
  // password     String
}

model Product {
  ////////// juliett /////////////
  id                String @id @default(uuid())
  createdAt         DateTime @default(now()) @db.Timestamp(0)
  updatedAt         DateTime @updatedAt
  price             Decimal? @db.Decimal(10, 2)
  name              String
  description       String @db.VarChar(999)
  imageUrl          String
  archived          Boolean @default(false)
  featured          Boolean @default(false)
  quantity          Int
  weight            Int

  // orderId           String
  categoryId        String
  // sizeId            String
  // colorId           String

  // order Order       @relation(fields: [orderId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
  // size Size         @relation(fields: [sizeId], references: [id])
  // color Color       @relation(fields: [colorId], references: [id])

  // @@index([orderId])
  @@index([categoryId])
  // @@index([sizeId])
  // @@index([colorId])

////////////// old /////////////
  // id          Int       @id @default(autoincrement())
  // name        String
  // description String    @db.VarChar(999)
  // price       Decimal
  // imageUrl    String
  // weight      Int
  // category    Category? @relation(fields: [category_id], references: [id])
  // category_id Int

  // @@index([category_id])
}

model Category{
  ///////////// juliett /////////////
  id                String     @id @default(uuid())
  createdAt         DateTime @default(now()) @db.Timestamp(0)
  updatedAt         DateTime @updatedAt
  name              String
  description       String
  product           Product[]

  ///////////// old /////////////

  // id          Int       @id @default(autoincrement())
  // name        String
  // description String
  // products    Product[]
}

model Order{
  id                String     @id @default(uuid())
  createdAt         DateTime @default(now()) @db.Timestamp(0)
  updatedAt         DateTime @updatedAt
  name              String
  email             String  @unique
  phone             String
  address           String
  totalPrice        Decimal
  paid              Boolean @default(false)
  // product           Product[]
}

model Billboard {
  id                String     @id @default(uuid())
  createdAt         DateTime @default(now()) @db.Timestamp(0)
  updatedAt         DateTime @updatedAt
  label             String
  date              String
  imageUrl          String
}

// model Size{
//   id                String     @id @default(uuid())
//   createdAt         DateTime @default(now()) @db.Timestamp(0)
//   updatedAt         DateTime @updatedAt
//   name              String
//   value             String
//   product           Product[]
//   }

// model Color{
//   id                String     @id @default(uuid())
//   createdAt         DateTime @default(now()) @db.Timestamp(0)
//   updatedAt         DateTime @updatedAt
//   name              String
//   value             String
//   product           Product[]
// }