datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Store {
  id        String @id @default(uuid())
  name      String
  userId    String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[] @relation("StoreToCategory")
  products  Product[] @relation("StoreToProduct")
  orders    OrderInfo[] @relation("StoreToOrder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id        String @id @default(uuid())
  storeId   String
  store     Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id          String @id @default(uuid())
  storeId     String
  store       Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String?
  billboard   Billboard? @relation(fields: [billboardId], references: [id])
  products    Product[] @relation("CategoryToProduct")
  name        String
  description String @db.VarChar(999)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model User {
  id        String @id @default(uuid())
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt
  email     String @unique
  username  String
  password  String
  role      String
}

model Product {
  id        String @id @default(uuid())
  storeId   String
  store     Store @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId String
  category   Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name      String
  price     Decimal @db.Decimal(10, 2)
  quantity  Int
  description String @db.VarChar(999)
  weight    Int
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  imageUrl   String
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
}

model OrderInfo {
  id        String @id @default(uuid())
  storeId   String
  store     Store @relation("StoreToOrder", fields: [storeId], references: [id])
  orderItems OrderItem[]
  isPaid    Boolean @default(false)
  isDelivered Boolean @default(false)
  name      String @default("")
  phone     String @default("")
  address   String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model OrderItem {
  id        String @id @default(uuid())
  orderId   String
  OrderInfo OrderInfo @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  
  @@index([orderId])
  @@index([productId])
}
